name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: ['*']
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: '1'
  PIP_DISABLE_PIP_VERSION_CHECK: '1'
  CACHE_EPOCH: '3'
  URLJSF_PIXI_VERSION: 0.36.0

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: v${{ env.URLJSF_PIXI_VERSION }}
          cache: true
          environments: build
          cache-key: job-build
      - name: cache (node)
        uses: actions/cache@v4
        with:
          path: node_modules
          key: |
            ${{ env.CACHE_EPOCH }}-${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}
      - run: pixi run build-yarn
      - run: ls node_modules/.skip-yarn || mkdir -p build && echo '1' > node_modules/.skip-yarn
      - run: pixi run dist
      - uses: actions/upload-artifact@v4
        with:
          name: urljsf-${{ github.run_number }}-dist
          path: |
            ./dist
      - uses: actions/upload-artifact@v4
        with:
          name: urljsf-${{ github.run_number }}-build
          path: |
            build/task-cache-v0
            js/lib
            js/dist
            js/tsconfig.tsbuildinfo
            src/urljs/_static

  lint:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: v${{ env.URLJSF_PIXI_VERSION }}
          cache: true
          environments: build lint
          cache-key: job-lint
      - uses: actions/download-artifact@v4
        with:
          name: urljsf-${{ github.run_number }}-build
      - name: cache (node)
        uses: actions/cache@v4
        with:
          path: node_modules
          key: |
            ${{ env.CACHE_EPOCH }}-${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}
      - run: pixi run fix
      - run: pixi run lint

  test:
    needs: [build]
    name: ${{ matrix.test-env }} (${{ matrix.vm }})
    runs-on: ${{ matrix.vm }}
    strategy:
      fail-fast: false
      matrix:
        vm: [ubuntu-latest, windows-latest, macos-13, macos-latest]
        test-env: [test, test-min]
        exclude:
          - { vm: macos-13, test-env: test }
          - { vm: macos-latest, test-env: test-min }
        include:
          - { test-env: test }
          - { test-env: test-min }
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: v${{ env.URLJSF_PIXI_VERSION }}
          cache: true
          environments: build ${{ matrix.test-env }}
          cache-key: job-test-${{ matrix.test-env }}
      - uses: actions/download-artifact@v4
        with:
          name: urljsf-${{ github.run_number }}-dist
          path: |
            ./dist
      - uses: actions/download-artifact@v4
        with:
          name: urljsf-${{ github.run_number }}-build
      - run: pixi run -v ${{ matrix.test-env }}-pytest
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: urljsf-${{ github.run_number }}-${{ matrix.test-env }}-${{ matrix.vm }}
          path: ./build/reports

  docs:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: v${{ env.URLJSF_PIXI_VERSION }}
          cache: true
          environments: atest build check docs test
          cache-key: job-docs
      - name: cache (node)
        uses: actions/cache@v4
        with:
          path: node_modules
          key: |
            ${{ env.CACHE_EPOCH }}-${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}
      - uses: actions/download-artifact@v4
        with:
          name: urljsf-${{ github.run_number }}-dist
          path: |
            ./dist
      - uses: actions/download-artifact@v4
        with:
          name: urljsf-${{ github.run_number }}-build
      - run: pixi run build-yarn
      - run: pixi run docs
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: urljsf-${{ github.run_number }}-docs
          path: ./build/docs
      - run: pixi run build-app-cov
      - run: pixi run atest
      - run: pixi run check
      - run: pixi run report
        if: always()
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: urljsf-${{ github.run_number }}-docs-reports
          path: ./build/reports
