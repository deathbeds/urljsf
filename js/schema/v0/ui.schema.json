{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$ref": "#/definitions/UISchema",
  "definitions": {
    "KnownUISchema": {
      "type": "object",
      "properties": {
        "items": {
          "$ref": "#/definitions/UISchema"
        },
        "ui:field": {
          "type": "string"
        },
        "ui:fieldReplacesAnyOrOneOf": {
          "type": "boolean"
        },
        "ui:options": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "We know that for title, it will be a string, if it is provided"
            },
            "description": {
              "type": "string",
              "description": "We know that for description, it will be a string, if it is provided"
            },
            "autoComplete": {
              "type": "boolean"
            },
            "autoFocus": {
              "type": "boolean"
            },
            "classNames": {
              "type": "string",
              "description": "Any classnames that the user wants to be applied to a field in the ui"
            },
            "disabled": {
              "type": "boolean",
              "description": "Flag, if set to `true`, will mark all child widgets from a given field as disabled"
            },
            "emptyValue": {
              "description": "The default value to use when an input for a field is empty",
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "object",
                  "properties": {}
                },
                {
                  "allOf": [
                    {
                      "type": "array",
                      "items": {}
                    },
                    {
                      "type": "object",
                      "properties": {}
                    }
                  ]
                },
                {
                  "type": "null"
                }
              ]
            },
            "enumDisabled": {
              "type": "array",
              "description": "Will disable any of the enum options specified in the array (by value)",
              "items": {
                "type": ["string", "number", "boolean"]
              }
            },
            "enumNames": {
              "type": "array",
              "description": "Allows a user to provide a list of labels for enum values in the schema",
              "items": {
                "type": "string"
              }
            },
            "filePreview": {
              "type": "boolean",
              "description": "Flag, if set to `true`, will cause the `FileWidget` to show a preview (with download for non-image files)"
            },
            "help": {
              "type": "string",
              "description": "Used to add text next to a field to guide the end user in filling it in"
            },
            "hideError": {
              "type": "boolean",
              "description": "Flag, if set to `true`, will hide the default error display for the given field AND all of its child fields in the hierarchy"
            },
            "inline": {
              "type": "boolean",
              "description": "Flag, if set to `true`, will mark a list of checkboxes as displayed all on one line instead of one per row"
            },
            "inputType": {
              "type": "string",
              "description": "Used to change the input type (for example, `tel` or `email`) for an <input>"
            },
            "order": {
              "type": "array",
              "description": "This property allows you to reorder the properties that are shown for a particular object",
              "items": {
                "type": "string"
              }
            },
            "placeholder": {
              "type": "string",
              "description": "We know that for placeholder, it will be a string, if it is provided"
            },
            "readonly": {
              "type": "boolean",
              "description": "Flag, if set to `true`, will mark all child widgets from a given field as read-only"
            },
            "rows": {
              "type": "number",
              "description": "Provides a means to set the initial height of a textarea widget"
            },
            "style": {
              "type": "object"
            },
            "urljsf:grid": {
              "type": "object",
              "properties": {
                "addButton": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "children": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "default": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "widget": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "ui:rootFieldId": {
          "type": "string"
        }
      }
    },
    "UISchema": {
      "anyOf": [
        {
          "$ref": "#/definitions/KnownUISchema"
        },
        {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UISchema"
          }
        }
      ]
    }
  }
}
